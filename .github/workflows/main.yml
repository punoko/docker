name: Main

on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
      url:
        required: true
        type: string
      event:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Look for new release
        id: release
        run: |
          RELEASE=$(curl -fsSL ${{ inputs.url }} | jq -r .name)
          echo $RELEASE >>${{ inputs.app }}/release
          echo "release=$RELEASE" >> $GITHUB_OUTPUT
          if git diff-index --quiet HEAD ${{ inputs.app }}/release; then
            echo "new=false" >> $GITHUB_OUTPUT
          else
            echo "new=true" >> $GITHUB_OUTPUT
          fi

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}
          flavor: latest=true
          tags: |
            type=raw,value=${{ steps.release.outputs.release }}

      - uses: docker/build-push-action@v6
        if: ${{ steps.release.outputs.new == 'true' || inputs.event != 'schedule' }}
        with:
          push: true
          file: ${{ inputs.app }}/Dockerfile
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Commit if new release
        if: ${{ steps.release.outputs.new == 'true' }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add ${{ inputs.app }}/release
          git commit -m "${{ inputs.app }} $LATEST"
          git push

      - uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ inputs.app }}
          package-type: 'container'
          min-versions-to-keep: 0
          delete-only-untagged-versions: 'true'
